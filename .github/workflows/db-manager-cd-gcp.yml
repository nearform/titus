name: 'DB Manager CD to GCP'

on:
  push:
    branches:
      - master
    paths:
      - 'packages/titus-db-manager/**'
      - '.github/workflows/db-manager-cd-gcp.yml'

env:
  DOCKER_SAVE_ARTIFACT: docker-save.tar
  DOCKER_REGISTRY_HOST: europe-west1-docker.pkg.dev
  CLOUDRUN_SERVICE_NAME: titus-db-manager
  CLOUDRUN_SERVICE_REGION: europe-west1
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  build-titus-db-manager:
    name: Build titus-db-manager
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker registry
        run: |
          gcloud components install beta
          gcloud beta auth configure-docker $DOCKER_REGISTRY_HOST
          echo "DOCKER_IMAGE=$DOCKER_REGISTRY_HOST/$PROJECT_ID/titus/db-manager:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build Docker image
        working-directory: ./packages/titus-db-manager
        run: docker build -t $DOCKER_IMAGE .

      - name: Export Docker image
        run: docker save $DOCKER_IMAGE > /tmp/$DOCKER_SAVE_ARTIFACT

      - name: Store Docker image as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.DOCKER_SAVE_ARTIFACT }}
          path: /tmp/${{ env.DOCKER_SAVE_ARTIFACT }}
          retention-days: 1

  docker-scan:
    needs: build-titus-db-manager
    uses: nearform/titus/.github/workflows/grype.yml@master
    with:
      docker-image: docker-save.tar
      scan-report: titus-db-manager

  deploy-titus-db-manager:
    name: Deploy titus-db-manager
    runs-on: ubuntu-latest
    needs: docker-scan

    steps:
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker registry
        run: |
          gcloud components install beta
          gcloud beta auth configure-docker $DOCKER_REGISTRY_HOST
          echo "DOCKER_IMAGE=$DOCKER_REGISTRY_HOST/$PROJECT_ID/titus/db-manager:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Download Docker image from artifacts store
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.DOCKER_SAVE_ARTIFACT }}
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/$DOCKER_SAVE_ARTIFACT

      - name: Push Docker image
        run: docker push $DOCKER_IMAGE

      - name: Run service
        uses: google-github-actions/deploy-cloudrun@v0.7.0
        with:
          service: ${{ env.CLOUDRUN_SERVICE_NAME }}
          image: ${{ env.DOCKER_IMAGE }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          region: ${{ env.CLOUDRUN_SERVICE_REGION }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Delete Docker artifacts
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ env.DOCKER_SAVE_ARTIFACT }}
