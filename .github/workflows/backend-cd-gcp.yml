name: Backend CD to GCP

on:
  push:
    branches:
      - master
    paths:
      - 'packages/titus-backend/**'
      - '.github/workflows/backend-cd-gcp.yml'

jobs:
  deploy-titus-backend:
    name: Build & Deploy titus-backend
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      DOCKER_REGISTRY_HOST: europe-west1-docker.pkg.dev
      CLOUDRUN_SERVICE_NAME: titus-backend
      CLOUDRUN_SERVICE_REGION: europe-west1

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          version: latest
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker repository
        run: |
          gcloud components install beta
          gcloud beta auth configure-docker $DOCKER_REGISTRY_HOST

          echo "DOCKER_IMAGE=$DOCKER_REGISTRY_HOST/$PROJECT_ID/titus/backend:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Install Grype tool (vulnerability scan)
        run: curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Build Docker image
        working-directory: ./packages/titus-backend
        run: docker build -t $DOCKER_IMAGE .

      - name: Scan image for vulnerabilities
        run: /usr/local/bin/grype $DOCKER_IMAGE | tee /tmp/vuln-scan-titus-backend.txt

      - name: Publish image scan results
        uses: actions/upload-artifact@v2
        with:
          name: vuln-scan-titus-backend.txt
          path: /tmp/vuln-scan-titus-backend.txt
          retention-days: 15

      - name: Push container
        working-directory: ./packages/titus-backend
        run: docker push $DOCKER_IMAGE

      - name: Run service
        uses: google-github-actions/deploy-cloudrun@v0.7.0
        with:
          service: ${{ env.CLOUDRUN_SERVICE_NAME }}
          image: ${{ env.DOCKER_IMAGE }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          region: ${{ env.CLOUDRUN_SERVICE_REGION }}
          project_id: ${{ env.PROJECT_ID }}
