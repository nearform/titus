user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Because we run behind a load balancer, we need to read this
    # header to get the real source IP of requests
    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;

    # Logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # Tweaks
    server_tokens           off;
    sendfile                on;
    proxy_connect_timeout   600;
    proxy_send_timeout      600;
    proxy_read_timeout      600;
    send_timeout            600;

    # Compression setup
    gzip  on;
    gzip_comp_level 5;
    gzip_proxied any;
    gzip_static on;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js image/png image/gif image/jpeg image/jpg;

    server {
        listen       80 proxy_protocol default_server;
        server_name  _;

        # If the initial request to the AWS ALB in front of Nginx was made via
        # plain HTTP, the ALB will set the http_x_forwarded_proto header to http
        # Nginx will detect, via this header, if the request was plain http and
        # respond with a 301 to redirect the client / user to HTTPS
        if ($http_x_forwarded_proto = 'http') {
            return 301 https://$host$request_uri;
        }

        location / {
            if ($http_upgrade = "websocket") {
                proxy_pass http://titus-backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
            }
            root    /usr/share/nginx/titus;
        }
        location /graphql {
            proxy_pass http://titus-backend;
        }
        location /authorization {
            proxy_pass http://titus-backend;
        }
    }
}
