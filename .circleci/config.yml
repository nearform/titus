defaults: &defaults
  docker:
    - image: circleci/node:10-browsers

version: 2
jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install
          command: npm install
      - run:
          name: bootstrap
          command: npm run bootstrap
      - persist_to_workspace:
          root: .
          paths:
            - .
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build the production frontend bundle
          command: |
            set -e
            cd packages/titus-kitchen-sink
            mv .env.prod .env
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: npm run lint:all
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: npm run test:all
  lighthouse:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: npm run lighthouse
      - store_artifacts:
          path: packages/titus-kitchen-sink/lighthouse-report.html
          destination: titus-kitchen-sink-lighthouse-report.html
  push-containers:
    <<: *defaults
    environment:
      DOCKER_REPO: "711655675495.dkr.ecr.us-east-1.amazonaws.com"
      S3_BUCKET: noise-website
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get -y install python-dev
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      - run:
          name: Push frontend to an S3 bucket
          command: |
            set -e
            cd packages/titus-kitchen-sink
            aws s3 sync build s3://${S3_BUCKET} --delete
     # - run:
     #     name: Build the backend Docker containers
     #     command: |
     #       cd packages/titus-kitchen-sink-backend/
     #       mv config/prod.js config/default.js
     #       docker build -t ${DOCKER_REPO}/titus-kitchen-sink-backend:latest -f docker/api/Dockerfile.prod .
     #       set -e
     # - run:
     #     name: Push the Docker containers to the registry
     #     command: |
     #       set -e
     #       # Login the AWS ECR registry
     #       eval $(aws ecr get-login --no-include-email --region us-east-1)
     #       # Push the frontend container
     #       docker push ${DOCKER_REPO}/titus-kitchen-sink-frontend:latest
            # Push the backend container
     #       echo -e "Pushing the frontend container\n"
     #       echo -e "Pushing the backend container\n"
     #       docker push ${DOCKER_REPO}/titus-kitchen-sink-backend:latest
workflows:
  version: 2
  test_and_build:
    jobs:
      - install
      - build:
          requires:
            - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - lint
      - lighthouse:
          requires:
            - build
      - push-containers:
          requires:
            - build
            - test
            - lint
            - lighthouse
          #filters:
          #  branches:
          #    only: master
