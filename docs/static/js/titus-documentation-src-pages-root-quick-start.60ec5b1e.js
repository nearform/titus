(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"./src/pages/root/quick-start.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function s(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function m(e,n){return!n||"object"!==c(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,n){return(i=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=m(this,l(n).call(this,e))).layout=null,t}var t,a,c;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&i(e,n)}(n,o.a.Component),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.components;p(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"quickstart"}},"Quickstart"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Titus is easy to install and run. We encourage developers to install Titus locally themselves It should feel easy to navigate around, start, and stop. Before we go further however, let us ensure you have all of the prerequesites installed. "),o.a.createElement(r.MDXTag,{name:"p",components:n},"You will need the latest stable versions of ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:""}},"Node.js"),", and ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:""}},"Docker"),". Both of these should be trivial to install and do not require any special setup."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"clone-the-repo"}},"Clone the repo"),o.a.createElement(r.MDXTag,{name:"p",components:n},"To kick everything off, fork ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:""}},"Titus")," on Github, it will be easier to maintain your own fork as Titus is designed to diverge, it is unlikely."),o.a.createElement(r.MDXTag,{name:"p",components:n},"Once you have your fork, clone a copy of it locally,"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"git clone https://github.com/<your-fork>/titus.git\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"install-dependencies"}},"Install dependencies"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Since Titus is a Lerna mono repo, there are two ways to kick of an install. While in the root folder of the project, run the following npm command,"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"npm install\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"or, should you have Lerna installed globally, you can also run,"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"lerna bootstrap\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"In both cases dependencies are installed for all constiuent parts of the repository."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"create-default-environment-files"}},"Create default environment files"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Titus uses ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".env")," files in each package to control various configuration. In all cases there are ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".sample.env")," files documenting what values should be in the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".env")," file proper."),o.a.createElement(r.MDXTag,{name:"p",components:n},"However, before the stack can be ran, the actual ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".env")," files need to be created and populated. A convenience script exists to automate this process. "),o.a.createElement(r.MDXTag,{name:"p",components:n},"To generate a default set of ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".env")," files for all packages, run the following command in the root of the project,"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"npm run create:env\n")),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"configure-auth-optional"}},"Configure Auth (Optional)"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Titus supports any auth provider that is OIDC compliant. In order to connect with Auth0 or any other OIDC provider few environment variables need to be defined."),o.a.createElement(r.MDXTag,{name:"p",components:n},"Both the frontend and backend are able to use the standard OIDC to connect to Auth0 or other OIDC compliant providers. Use the following variables instead of the above mentioned:"),o.a.createElement(r.MDXTag,{name:"p",components:n},"For the frontend Auth0 configuration:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"REACT_APP_OIDC_AUTHORITY\nREACT_APP_OIDC_CLIENT_ID\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"For the backend Auth0 configuration:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"REACT_APP_AUTH0_DOMAIN\nREACT_APP_AUTH0_CLIENT_ID\nREACT_APP_AUTH0_AUDIENCE\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"For backend app:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"AUTH0_DOMAIN\nAUTH0_CLIENT_ID\nAUTH0_CLIENT_SECRET\nAUTH0_AUDIENCE\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"run-the-stack"}},"Run the stack"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Titus runs locally on Docker. Ensure Docker has started on your machine before running the stack. To run the full stack, in the root of the project, run,"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"npm run start:kitchen-sink\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Running the command below,"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"docker ps\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Should produce a slightly more detailed version of the output below,"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"CONTAINER ID        IMAGE            PORTS                              NAMES\n5fae4357593d        docker_api       0.0.0.0:5000->5000/tcp, 8080/tcp   docker_api_1\nd119b3262ff7        docker_titus-db  0.0.0.0:5432->5432/tcp             docker_titus-db_1\n9970ccaaee48        mrister/fake-s3  0.0.0.0:4569->4569/tcp             docker_s3_1\nddbe5f6e0913        adminer          0.0.0.0:8080->8080/tcp             docker_adminer_1\n0470eec65534        redis:alpine     0.0.0.0:6379->6379/tcp             docker_redis_1\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"If all of the services above are listed, you are now free running Titus! Congratulations."),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"stopping-the-stack"}},"Stopping the stack"),o.a.createElement(r.MDXTag,{name:"p",components:n},"You can can also stop the stack by running"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"npm run stop:kitchen-sink\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Which will stop all applicable docker containers and services."))}}])&&s(t.prototype,a),c&&s(t,c),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=titus-documentation-src-pages-root-quick-start.22f2ae8c6bbfbc15d2f2.js.map