(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"../titus-components/src/uploader/services/UploaderService.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),r=a.n(t),o=a("./node_modules/@mdx-js/tag/dist/index.js");function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}n.default=function(e){var n=e.components;s(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:n},r.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"uploaderservice"}},"UploaderService"),r.a.createElement(o.MDXTag,{name:"p",components:n},"UploaderService handles uploading files into ",r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://aws.amazon.com/"}},"AWS"),"."),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"typings-definitions"}},"Typings Definitions"),r.a.createElement(o.MDXTag,{name:"pre",components:n},r.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-ts",metaString:""}},"export interface UploaderServiceOptions {\n  awsConfig?: object\n  bucket: string\n  getParams?: (file: object) => object\n  getTags?: (file: object) => Array<{ Key: string; Value: string }>\n}\n")),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"example"}},"Example"),r.a.createElement(o.MDXTag,{name:"pre",components:n},r.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"const awsConfig = {\n  accessKeyId: '',\n  secretAccessKey: '',\n  region: '',\n  computeChecksums: false,\n  sslEnabled: false,\n  s3ForcePathStyle: true,\n  s3: {\n    endpoint: '',\n    s3BucketEndpoint: false,\n    computeChecksums: false\n  }\n}\n\nfunction getParams(file) {\n  return {\n    Key: file.id,\n    Body: file.orig,\n    ContentType: file.type,\n    Metadata: { 'original-name': file.name }\n  }\n}\n\n// TODO Tags are currently disabled due an access S3 policies issue\nfunction getTags(file) {\n  return [{ Key: 'OriginalName', Value: file.name }]\n}\n\nconst service = new UploaderService({\n  awsConfig,\n  bucket: 'name-of-your-bucket',\n  getParams,\n  getTags\n})\n")))}}}]);