{"version":3,"sources":["webpack:///../titus-components/src/uploader/images/baseline-cloud_upload-24px.svg","webpack:///../titus-components/src/uploader/services/UploaderService.js","webpack:///../titus-components/src/uploader/stories/uploader.story.js","webpack:///../titus-components/src/uploader/FileUploaderContext.js","webpack:///../titus-components/src/uploader/headless/UploadDisplayCard.js","webpack:///../titus-components/src/uploader/headless/withDropTarget.js","webpack:///../titus-components/src/uploader/headless/DropAreaCard.js","webpack:///../titus-components/src/uploader/material/DropArea.js","webpack:///../titus-components/src/uploader/material/atoms/FileSize.js","webpack:///../titus-components/src/uploader/material/atoms/UploadStatus.js","webpack:///../titus-components/src/uploader/material/DisplayCard.js","webpack:///../titus-components/src/uploader/material/UploaderContainer.js","webpack:///../titus-components/src/uploader/uploader.js","webpack:///../titus-components/src/uploader/uploader.mdx"],"names":["module","exports","__webpack_require__","p","pendingAbortUploads","partSize","parseInt","process","REACT_APP_S3_UPLOADER_PART_SIZE","queueSize","REACT_APP_S3_UPLOADER_QUEUE_SIZE","AWSS3ManagedUpload","id","bucket","params","tags","_classCallCheck","this","uploadParams","Object","assign","Bucket","s3Upload","S3ManagedUpload","file","Body","uploadId","onProgress","onError","onUploadDone","_this","on","progress","isMultipart","part","total","Math","round","loaded","send","err","abort","UploaderService","options","getParams","getDefaultParams","getTags","awsConfig","AWS","config","update","Key","name","orig","ContentType","type","upload","abortUpload","bind","uploadFile","cb","abortFunc","e","d","__webpack_exports__","service","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_storybook_react__WEBPACK_IMPORTED_MODULE_1__","_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__","_storybook_addon_knobs_react__WEBPACK_IMPORTED_MODULE_3__","_uploader__WEBPACK_IMPORTED_MODULE_4__","accessKeyId","secretAccessKey","region","computeChecksums","sslEnabled","s3ForcePathStyle","s3","endpoint","s3BucketEndpoint","Metadata","original-name","Value","storiesOf","addDecorator","withKnobs","add","a","createElement","maxItems","number","action","onUploadError","FileUploaderContext","React","createContext","withFileUploader","Component","props","react_default","Consumer","state","fileUploader","UploadDisplayCard","_possibleConstructorReturn","_getPrototypeOf","call","handleRemove","removeFile","error","done","_this2","setState","message","Promise","resolve","includes","undefined","reader","FileReader","addEventListener","result","readAsDataURL","then","thumbData","mediaImage","catch","startUpload","percent","uploadProgress","onUploadCancel","_this$props","title","DisplayCardComponent","_this$state","size","onAbortUpload","onRemove","UploadFileDescriptor","idSuffix","isDirectory","withDropTarget_classCallCheck","concat","v4","getFilesFromFileDataTransfer","dataTransfer","forceFileType","files","length","item","promises","i","dtItem","push","items","getAsEntry","webkitGetAsEntry","all","_ref","apply","_toConsumableArray","uploadTarget","drop","monitor","component","didDrop","getItem","handleFilesUpdate","console","moved","canDrop","DropTarget","NativeTypes","FILE","connect","connectDropTarget","dropTarget","isOver","isOverCurrent","shallow","itemType","getItemType","UploadCard","DropAreaCard_classCallCheck","DropAreaCard_getPrototypeOf","focused","inputFile","createRef","DropAreaCard_assertThisInitialized","handleSelectFile","handleClick","handleFocus","handleBlur","event","target","logger","current","click","addFiles","text","DropAreaComponent","classes","dropAreaContainerClasses","dropAreaContainer","dropAreaContainerFocus","onClick","className","container","ref","onChange","multiple","input","onFocus","onBlur","join","dragOnUploadError","withDropTarget","withStyles","theme","position","zIndex","left","top","width","height","opacity","boxShadow","palette","primary","dark","styles","tile","border","media","marginTop","bar","padding","backgroundColor","color","barStyle","titleWrap","actionIcon","StylesGridListTileBar","GridListTileBar","DropAreaBase","GridListTile_default","src","uploadImage","alt","subtitle","defaultProps","sufixes","FileSize","bits","floor","log","pow","toFixed","formatBits","UploadStatus","data-testid","atoms_FileSize","complete","objectFit","StyledGridListTileBar","titleWrapActionPosRight","marginLeft","NoPreview","root","display","justifyContent","alignItems","Typography_default","variant","DisplayCard","_ref2","atoms_UploadStatus","style","background","Delete_default","Spacer","children","marginBottom","marginRight","getUploaderText","currentItems","UploaderContainerBase","GridList_default","cellHeight","gridList","map","UploaderContainer_Spacer","key","headless_UploadDisplayCard","DropAreaCard","DropArea","Uploader","_React$Component","uploader_classCallCheck","uploader_getPrototypeOf","handleAddFile","uploader_assertThisInitialized","handleRemovefile","handleUploadError","handleUploadDone","handleUploadCancel","uploader_inherits","value","fileId","filter","find","uploader_toConsumableArray","Provider","react_dnd_lib","backend","HTML5Backend","UploaderContainer","DragDropContext","MDXContent","layout","components","_objectWithoutProperties","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","parentName","href","docz__WEBPACK_IMPORTED_MODULE_2__","of","UploaderBase","__codesandbox","__position","__code","__scope","_uploader__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"static/js/titus-components-src-uploader-uploader.a9ae9d6f.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/img/baseline-cloud_upload-24px.0c8a0359.svg\";","// Import only the required files from AWS (the complete bundle is ~1.7M\nimport AWS from 'aws-sdk/lib/core.js'\nimport 'aws-sdk/clients/s3'\nimport S3ManagedUpload from 'aws-sdk/lib/s3/managed_upload.js'\n\nlet pendingAbortUploads = {}\n\nconst partSize =\n  parseInt(process.env.REACT_APP_S3_UPLOADER_PART_SIZE, 10) || 5242880\nconst queueSize =\n  parseInt(process.env.REACT_APP_S3_UPLOADER_QUEUE_SIZE, 10) || 4\n\nclass AWSS3ManagedUpload {\n  constructor(id, bucket, params, tags) {\n    const uploadParams = {\n      partSize,\n      queueSize,\n      params: Object.assign({}, { Bucket: bucket }, params)\n    }\n\n    tags && (uploadParams.tags = tags)\n\n    this.s3Upload = new S3ManagedUpload(uploadParams)\n    this.file = params.Body\n    this.uploadId = id\n  }\n\n  uploadFile(onProgress, onError, onUploadDone) {\n    return this.s3Upload\n      .on('httpUploadProgress', progress => {\n        let isMultipart = progress && progress.part > 1\n        if (!isMultipart) {\n          isMultipart = progress.total > partSize\n        }\n\n        onProgress(\n          Math.round((progress.loaded / progress.total) * 100),\n          this.uploadId,\n          isMultipart\n        )\n      })\n      .send(err => {\n        if (err) {\n          onError(err, this.file)\n        } else {\n          onUploadDone(this.file)\n        }\n      })\n  }\n\n  abortUpload() {\n    return this.s3Upload.abort()\n  }\n}\n\nclass UploaderService {\n  constructor(options) {\n    this.bucket = options.bucket\n    this.getParams = options.getParams || this.getDefaultParams\n    this.getTags = options.getTags\n    if (options.awsConfig) {\n      if (typeof AWS !== 'undefined') {\n        AWS.config.update(options.awsConfig)\n      }\n    }\n  }\n\n  getDefaultParams(file) {\n    return {\n      Key: file.name,\n      Body: file.orig,\n      ContentType: file.type\n    }\n  }\n\n  clear() {\n    pendingAbortUploads = {}\n    return this\n  }\n\n  startUpload(file, onProgress, onError, onUploadDone) {\n    const upload = new AWSS3ManagedUpload(\n      file.id,\n      this.bucket,\n      this.getParams(file),\n      this.getTags ? this.getTags(file) : null\n    )\n\n    pendingAbortUploads[upload.uploadId] = upload.abortUpload.bind(upload)\n\n    upload.uploadFile(onProgress, onError, onUploadDone)\n  }\n\n  abortUpload(file, cb) {\n    try {\n      const abortFunc = pendingAbortUploads[file.id]\n      if (typeof abortFunc === 'function') abortFunc()\n      cb(null, file)\n    } catch (e) {\n      cb(e, file)\n    }\n  }\n}\n\nexport default UploaderService\n","import React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { withKnobs, number } from '@storybook/addon-knobs/react'\n\nimport Uploader from '../uploader'\nimport UploaderService from '../services/UploaderService'\n\nconst awsConfig = {\n  accessKeyId: 'ignored',\n  secretAccessKey: 'ignored',\n  region: 'ignored',\n  computeChecksums: false,\n  sslEnabled: false,\n  s3ForcePathStyle: true,\n  s3: {\n    endpoint: 'http://localhost:4569',\n    s3BucketEndpoint: false,\n    computeChecksums: false\n  }\n}\n\nfunction getParams(file) {\n  return {\n    Key: file.id,\n    Body: file.orig,\n    ContentType: file.type,\n    Metadata: { 'original-name': file.name }\n  }\n}\n\n// TODO Tags are currently disabled due an access S3 policies issue\nfunction getTags(file) {\n  return [{ Key: 'OriginalName', Value: file.name }]\n}\n\nexport const service = new UploaderService({\n  awsConfig,\n  bucket: 'titus-uploader-471234098732409871234',\n  getParams,\n  getTags\n})\n\nstoriesOf('Uploader', module)\n  .addDecorator(withKnobs)\n  .add('default', () => (\n    <Uploader\n      maxItems={number('Max items', 1)}\n      service={service}\n      onUploadDone={action('OnUploadDone')}\n      onUploadError={action('OnUploadError')}\n    />\n  ))\n","import React from 'react'\n\nexport const FileUploaderContext = React.createContext('file-uploader')\n\nexport function withFileUploader(Component) {\n  return function FileUploaderComponent(props) {\n    return (\n      <FileUploaderContext.Consumer>\n        {state => <Component {...props} fileUploader={state} />}\n      </FileUploaderContext.Consumer>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst readFileThumbnailData = file =>\n  new Promise(resolve => {\n    if (!file.type.includes('image')) return resolve(undefined)\n\n    const reader = new FileReader()\n    reader.addEventListener(\n      'load',\n      function() {\n        return resolve(reader.result)\n      },\n      false\n    )\n\n    reader.readAsDataURL(file.orig || file)\n  })\n\nclass UploadDisplayCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { error: null, done: false }\n  }\n\n  componentDidMount() {\n    if (this.props && this.props.file) {\n      const onUploadError = (e, err) => {\n        this.props.fileUploader.onUploadError(e, this.props.file)\n        this.setState({ error: e.message })\n      }\n\n      const onUploadDone = e => {\n        this.props.fileUploader.onUploadDone(this.props.file)\n        this.setState({ done: true })\n      }\n\n      const onProgress = (percent, uploadId, isMultipart) => {\n        this.setState({ uploadProgress: percent, isMultipart })\n      }\n\n      readFileThumbnailData(this.props.file)\n        .then(thumbData => {\n          this.setState({ mediaImage: thumbData })\n        })\n        .catch(onUploadError)\n\n      this.props.fileUploader.service.startUpload(\n        this.props.file,\n        onProgress,\n        onUploadError,\n        onUploadDone\n      )\n\n      this.abortUpload = this.props.fileUploader.service.abortUpload.bind(\n        this,\n        this.props.file,\n        this.props.fileUploader.onUploadCancel\n      )\n    }\n  }\n\n  handleRemove = () => {\n    this.props.fileUploader.removeFile(this.props.file.id)\n  }\n\n  componentWillUnmount() {\n    if (!this.state.done && this.abortUpload) {\n      this.abortUpload()\n    }\n  }\n\n  render() {\n    const { title, file, DisplayCardComponent } = this.props\n    const { uploadProgress, mediaImage } = this.state\n\n    return (\n      <DisplayCardComponent\n        uploadProgress={uploadProgress}\n        title={title}\n        id={file.id}\n        name={file.name}\n        mediaImage={mediaImage}\n        size={file.orig.size}\n        onAbortUpload={this.abortUpload}\n        error={this.state.error}\n        done={this.state.done}\n        onRemove={this.handleRemove}\n      />\n    )\n  }\n}\n\nUploadDisplayCard.propTypes = {\n  title: PropTypes.string,\n  file: PropTypes.object,\n  fileUploader: PropTypes.object,\n  DisplayCardComponent: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n    .isRequired\n}\n\nexport default UploadDisplayCard\n","import { DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend-filedrop'\n\nimport { v4 } from 'uuid'\n\nconst getAsEntry = item =>\n  item.getAsEntry\n    ? item.getAsEntry()\n    : item.webkitGetAsEntry\n      ? item.webkitGetAsEntry()\n      : null\n\nclass UploadFileDescriptor {\n  constructor(file, idSuffix, isDirectory) {\n    this.id = `file-${idSuffix}-${v4()}`\n    this.name = file.name\n    this.type = file.type\n    this.orig = file\n    this.isDirectory = isDirectory\n  }\n}\n\nexport const getFilesFromFileDataTransfer = (dataTransfer, forceFileType) => {\n  return Promise.resolve().then(() => {\n    if (\n      !dataTransfer ||\n      !dataTransfer.files ||\n      dataTransfer.files.length === 0\n    ) {\n      return []\n    }\n    const promises = []\n\n    for (let i = 0; i < dataTransfer.files.length; i++) {\n      const dtItem = dataTransfer.files[i]\n      promises.push(\n        new UploadFileDescriptor(\n          dtItem,\n          i,\n          forceFileType ? false : getAsEntry(dataTransfer.items[i]).isDirectory\n        )\n      )\n    }\n\n    return Promise.all(promises).then(files => [].concat(...files))\n  })\n}\n\nconst uploadTarget = {\n  drop(props, monitor, component) {\n    if (monitor.didDrop()) {\n      return\n    }\n\n    const item = monitor.getItem()\n    getFilesFromFileDataTransfer(item.dataTransfer)\n      .then(files => {\n        component.handleFilesUpdate(files)\n      })\n      .catch(console.error)\n\n    return { moved: true }\n  },\n  canDrop() {\n    return true\n  }\n}\n\nfunction collect(connect, monitor) {\n  return {\n    // Call this function inside render()\n    // to let React DnD handle the drag events:\n    connectDropTarget: connect.dropTarget(),\n    // You can ask the monitor about the current drag state:\n    isOver: monitor.isOver(),\n    isOverCurrent: monitor.isOver({ shallow: true }),\n    canDrop: monitor.canDrop(),\n    itemType: monitor.getItemType()\n  }\n}\n\nexport default DropTarget([NativeTypes.FILE], uploadTarget, collect)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { withFileUploader } from '../FileUploaderContext'\nimport withDropTarget, { getFilesFromFileDataTransfer } from './withDropTarget'\n\nconst styles = theme => ({\n  container: {\n    position: 'relative',\n    zIndex: 0\n  },\n  input: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    opacity: 0,\n  },\n  dropAreaContainer: {\n    position: 'relative',\n    zIndex: 1\n  },\n  dropAreaContainerFocus: {\n    boxShadow: `inset 0 0 0 2px ${theme.palette.primary.dark}`\n  }\n})\n\nclass UploadCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { focused: false }\n    this.inputFile = React.createRef()\n    this.handleFilesUpdate = this.handleFilesUpdate.bind(this)\n    this.handleSelectFile = this.handleSelectFile.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleFocus = this.handleFocus.bind(this)\n    this.handleBlur = this.handleBlur.bind(this)\n  }\n\n  handleSelectFile(event) {\n    getFilesFromFileDataTransfer(event.target, true)\n      .then(files => {\n        this.handleFilesUpdate(files)\n      })\n      .catch(this.props.fileUploader.logger)\n  }\n\n  handleClick() {\n    this.inputFile.current.click()\n  }\n\n  handleFilesUpdate(files) {\n    this.props.fileUploader.addFiles(files)\n  }\n\n  handleFocus() {\n    this.setState({\n      focused: true\n    })\n  }\n\n  handleBlur() {\n    this.setState({\n      focused: false\n    })\n  }\n\n  render() {\n    const {\n      title,\n      text,\n      connectDropTarget,\n      DropAreaComponent,\n      fileUploader,\n      classes\n    } = this.props\n\n    const dropAreaContainerClasses =  [classes.dropAreaContainer]\n\n    if (this.state.focused) {\n      dropAreaContainerClasses.push(classes.dropAreaContainerFocus)\n    }\n\n    return connectDropTarget(\n      <div onClick={this.handleClick} className={classes.container}>\n        <input\n          ref={this.inputFile}\n          type=\"file\"\n          id=\"uploadfile\"\n          onChange={this.handleSelectFile}\n          multiple={fileUploader.maxItems - fileUploader.files.length > 1}\n          className={classes.input}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n        />\n        <div className={dropAreaContainerClasses.join(' ')}>\n          <DropAreaComponent\n            text={text}\n            title={title}\n            error={fileUploader.dragOnUploadError}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nUploadCard.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.string,\n  text: PropTypes.string,\n  fileUploader: PropTypes.object,\n  connectDropTarget: PropTypes.func,\n  DropAreaComponent: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n    .isRequired\n}\n\nexport default withFileUploader(withDropTarget(withStyles(styles)(UploadCard)))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\n\nimport uploadImage from '../images/baseline-cloud_upload-24px.svg'\n\nconst colorBase = '#DDDDDD'\nconst textColor = '#333'\nconst errorColor = '#ff090a'\n\nconst styles = {\n  tile: {\n    width: 245,\n    height: 300,\n    border: `2px dotted ${colorBase}`\n  },\n  media: {\n    width: '120px',\n    height: '120px',\n    marginTop: '60px'\n  },\n  bar: {\n    padding: '2px',\n    backgroundColor: colorBase,\n    color: 'black'\n  },\n  error: {\n    color: errorColor,\n    marginTop: '3px'\n  }\n}\n\nconst barStyle = {\n  titleWrap: {\n    color: textColor\n  },\n  actionIcon: {\n    color: 'white'\n  }\n}\nconst StylesGridListTileBar = withStyles(barStyle)(GridListTileBar)\n\nconst DropAreaBase = ({ classes, text, error, title }) => {\n  return (\n    <GridListTile className={classes.tile}>\n      <img\n        className={classes.media}\n        title=\"Upload\"\n        src={uploadImage}\n        alt=\"uploaded\"\n      />\n      <StylesGridListTileBar\n        className={classes.bar}\n        title={title}\n        subtitle={\n          <div>\n            <div>{text}</div>\n            {error && <div className={classes.error}>{error}</div>}\n          </div>\n        }\n      />\n    </GridListTile>\n  )\n}\n\nDropAreaBase.defaultProps = {\n  title: 'Upload',\n  text: 'Drag here your file'\n}\nDropAreaBase.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.string,\n  text: PropTypes.string,\n  error: PropTypes.string\n}\n\nexport default withStyles(styles)(DropAreaBase)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst sufixes = ['Bits', 'KB', 'MB', 'GB', 'TB']\n\nconst formatBits = bits => {\n  const i = Math.floor(Math.log(bits) / Math.log(1024))\n  return (\n    (!bits && '0') || (bits / Math.pow(1024, i)).toFixed(2) + ` ${sufixes[i]}`\n  )\n}\n\nconst FileSize = ({ bits }) => <span>{formatBits(bits)}</span>\n\nFileSize.propTypes = {\n  bits: PropTypes.number\n}\n\nexport default FileSize\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FileSize from './FileSize'\n\nconst UploadStatus = props =>\n  props.progress === 100 && props.done ? (\n    <span data-testid=\"upload-status\">\n      Size: <FileSize bits={props.size} />, Upload Complete\n    </span>\n  ) : (\n    <span data-testid=\"upload-status\">\n      Uploaded:{' '}\n      <FileSize bits={Math.floor((props.size / 100) * props.progress)} /> /{' '}\n      <FileSize bits={props.size} />\n    </span>\n  )\n\nUploadStatus.propTypes = {\n  size: PropTypes.number,\n  done: PropTypes.bool,\n  progress: PropTypes.number\n}\n\nexport default UploadStatus\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\n// import Cancel from '@material-ui/icons/Cancel'\nimport Delete from '@material-ui/icons/Delete'\nimport Typography from '@material-ui/core/Typography'\n\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\n\nimport UploadStatus from './atoms/UploadStatus'\n\nconst colorBase = '#222222ef'\nconst colorProgress = '#737072ef'\nconst colorError = '#FF0000dd'\nconst colorDone = '#238F2Cef'\n\nconst styles = {\n  tile: {\n    width: 245,\n    height: 300,\n    border: `2px solid ${colorBase}`\n  },\n  complete: { border: `2px solid ${colorProgress}` },\n  media: {\n    objectFit: 'cover',\n    width: '245px',\n    height: '300px'\n  },\n  bar: {\n    padding: '2px'\n  }\n}\n\nconst StyledGridListTileBar = withStyles({\n  titleWrapActionPosRight: {\n    marginLeft: '2px'\n  },\n\n  actionIcon: {\n    color: 'white'\n  }\n})(GridListTileBar)\n\nconst NoPreview = withStyles({\n  root: {\n    height: '240px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n})(({ classes }) => (\n  <div className={classes.root} data-testid=\"display-card-no-preview\">\n    <Typography variant=\"h6\">No Preview Available</Typography>\n  </div>\n))\n\nconst DisplayCard = ({\n  classes,\n  uploadProgress,\n  title,\n  name,\n  size,\n  // onAbortUpload,\n  mediaImage,\n  error,\n  done,\n  onRemove\n}) => (\n  <GridListTile\n    className={`${classes.tile} ${\n      uploadProgress === 100 ? classes.complete : ''\n    }`}\n  >\n    {mediaImage && (\n      <img\n        className={classes.media}\n        title={title || name}\n        src={mediaImage}\n        alt=\"media\"\n      />\n    )}\n    {!mediaImage && <NoPreview />}\n    <StyledGridListTileBar\n      className={classes.bar}\n      title={title || name}\n      subtitle={\n        error || (\n          <UploadStatus size={size} progress={uploadProgress} done={done} />\n        )\n      }\n      style={{\n        background: error\n          ? colorError\n          : done\n            ? colorDone\n            : `linear-gradient(to right, ${colorProgress} ${uploadProgress}%, ${colorBase} ${uploadProgress}%, ${colorBase} ${100 -\n                uploadProgress}%)`\n      }}\n      {...(error\n        ? {\n            actionIcon: <Delete onClick={onRemove} />\n          }\n        : {})}\n    />\n  </GridListTile>\n)\n\n/*\n  // FIXME the upload abort is currently disabled. It's required to figure out what to do with\n  // aborted items that continue to upload (is not possible to abort an http request, only multipart can be aborted)\n  // Probably a backend functionality is required to clean up the file\n  // The following snippet should be added to StyledGridListTileBar component\n  actionIcon={\n    uploadProgress < 100 ? <Cancel onClick={onAbortUpload}/> : <div />\n  }\n*/\n\nDisplayCard.propTypes = {\n  classes: PropTypes.object,\n  uploadProgress: PropTypes.any,\n  title: PropTypes.any,\n  name: PropTypes.any,\n  mediaImage: PropTypes.any,\n  // onAbortUpload: PropTypes.func,\n  size: PropTypes.number,\n  done: PropTypes.bool,\n  error: PropTypes.string,\n  onRemove: PropTypes.func\n}\n\nexport default withStyles(styles)(DisplayCard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\n\nimport { withFileUploader } from '../FileUploaderContext'\nimport UploadDisplayCard from '../headless/UploadDisplayCard'\nimport DropAreaCard from '../headless/DropAreaCard'\n\nimport DropArea from './DropArea'\nimport DisplayCard from './DisplayCard'\n\nconst styles = {\n  gridList: {\n    width: '100%'\n  }\n}\n\nconst Spacer = ({ children }) => (\n  <div style={{ marginBottom: '10px', marginRight: '10px' }}>{children}</div>\n)\n\nSpacer.propTypes = {\n  children: PropTypes.any\n}\n\nconst getUploaderTitle = maxItems =>\n  `To upload drag your file${maxItems > 1 ? 's' : ''}`\n\nconst getUploaderText = (maxItems, currentItems) =>\n  maxItems > 1 ? `Uploaded ${currentItems} of ${maxItems}` : ''\n\nconst UploaderContainerBase = props => {\n  return (\n    <div>\n      <GridList cellHeight={180} className={props.classes.gridList}>\n        {props.fileUploader.files.map(file => {\n          return (\n            <Spacer key={file.id}>\n              <UploadDisplayCard\n                fileUploader={props.fileUploader}\n                file={file}\n                DisplayCardComponent={DisplayCard}\n              />\n            </Spacer>\n          )\n        })}\n        {props.fileUploader.files.length < props.maxItems && (\n          <Spacer>\n            <DropAreaCard\n              fileUploader={props.fileUploader}\n              title={getUploaderTitle(\n                props.maxItems,\n                props.fileUploader.files.length\n              )}\n              text={getUploaderText(\n                props.maxItems,\n                props.fileUploader.files.length\n              )}\n              DropAreaComponent={DropArea}\n            />\n          </Spacer>\n        )}\n      </GridList>\n    </div>\n  )\n}\n\nUploaderContainerBase.propTypes = {\n  classes: PropTypes.object,\n  fileUploader: PropTypes.object,\n  maxItems: PropTypes.number\n}\n\nexport default withStyles(styles)(withFileUploader(UploaderContainerBase))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport HTML5Backend from 'react-dnd-html5-backend-filedrop'\nimport { DragDropContext, DragDropContextProvider } from 'react-dnd'\nimport { FileUploaderContext } from './FileUploaderContext'\n\nimport UploaderContainer from './material/UploaderContainer'\n\nexport class Uploader extends React.Component {\n  static defaultProps = {\n    maxItems: 1,\n    logger: console\n  }\n  \n  static propTypes = {\n    /** Maximum number of files that can be uploaded. */\n    maxItems: PropTypes.number,\n    /** An instance of the `UploaderService` class. */\n    service: PropTypes.object,\n    /** A custom logger used to log internal operations. */\n    logger: PropTypes.object,\n    /** Callback function invoked when upload is completed. */\n    onUploadDone: PropTypes.func,\n    /** Callback function invoked when upload has failed. */\n    onUploadError: PropTypes.func\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      files: [],\n      maxItems: this.props.maxItems,\n      addFiles: this.handleAddFile.bind(this),\n      removeFile: this.handleRemovefile.bind(this),\n      service: this.props.service,\n      dragOnUploadError: null,\n      logger: this.props.logger,\n      onUploadError: this.handleUploadError.bind(this),\n      onUploadDone: this.handleUploadDone.bind(this),\n      onUploadCancel: this.handleUploadCancel.bind(this)\n    }\n  }\n\n  handleUploadCancel(file) {\n    this.state.logger.log('Cancel', file)\n  }\n\n  handleUploadDone(file) {\n    this.props.onUploadDone && this.props.onUploadDone(file)\n  }\n\n  handleUploadError(err, file) {\n    this.props.onUploadError && this.props.onUploadError(err, file)\n  }\n\n  handleRemovefile(fileId) {\n    this.setState({\n      files: this.state.files.filter(file => file.id !== fileId)\n    })\n  }\n\n  handleAddFile(files) {\n    if (files.find(file => file.isDirectory)) {\n      this.setState({ dragOnUploadError: 'Directory are not allowed' })\n      return\n    }\n\n    if (this.props.maxItems === 1 && files.length > 1) {\n      this.setState({ dragOnUploadError: 'Only one file allowed' })\n      return\n    }\n    if (files.length + this.state.files.length > this.props.maxItems) {\n      this.setState({ dragOnUploadError: 'Too many files added' })\n      return\n    }\n    this.setState({\n      files: [...this.state.files, ...files],\n      dragOnUploadError: null\n    })\n  }\n\n  render() {\n    return (\n      <FileUploaderContext.Provider value={this.state}>\n        <DragDropContextProvider backend={HTML5Backend}>\n          <UploaderContainer maxItems={this.props.maxItems} />\n        </DragDropContextProvider>\n      </FileUploaderContext.Provider>\n    )\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(Uploader)\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport Uploader, { Uploader as UploaderBase } from './uploader'\nimport { service } from './stories/uploader.story'\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"uploader\"}}>{`Uploader`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The Uploader component provides and easy to use way to upload files to a backend by pulling together the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/react-dnd/react-dnd\"}}>{`react-dnd`}</MDXTag>{` library and `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://material-ui.com/\"}}>{`Material UI`}</MDXTag>{` components.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In order to use this component, you must first initialize an `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/titus-components/uploader-service\"}}>{`UploaderService`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<PropsTable of={UploaderBase} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"typings-definitions\"}}>{`Typings definitions`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-ts\"}}>{`export interface UploaderProps {\n  maxItems?: number\n  service?: object\n  logger?: object\n  onUploadDone?: (file: object) => void\n  onUploadError?: (error: any, file: object) => void\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __codesandbox={``} __position={1} __code={'<Uploader\\n  maxItems={1}\\n  service={service}\\n  onUploadDone={console.log}\\n  onUploadError={console.log}\\n/>'} __scope={{props: this ? this.props : props,Uploader,UploaderBase,service}}>\n  <Uploader\n    maxItems={1}\n    service={service}\n    onUploadDone={console.log}\n    onUploadError={console.log}\n  />\n</Playground>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}